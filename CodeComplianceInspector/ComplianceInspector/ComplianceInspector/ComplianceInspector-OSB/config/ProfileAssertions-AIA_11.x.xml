<?xml version = '1.0' encoding = 'UTF-8'?>
<ProfileAssertionSets time="July 27 2010 11:50:59AM GMT" xmlns="http://www.oracle.com/soa/fp/governance/auditor" version="AIA_11.x">
<ProfileAssertionSet name="Bootstrap" >
<Property name="xpathPrefixes"
            value='jcameta="http://platform.integration.oracle/blocks/adapter/fw/metadata";ui="http://xmlns.oracle.com/soa/designer/";sca="http://xmlns.oracle.com/sca/1.0";bpel="http://schemas.xmlsoap.org/ws/2003/03/business-process/";xsl="http://www.w3.org/1999/XSL/Transform";aiacfg="http://xmlns.oracle.com/aia/core/config/V1";wsdl="http://schemas.xmlsoap.org/wsdl/";xsd="http://www.w3.org/2001/XMLSchema";xsd="http://www.w3.org/2001/XMLSchema";bpelx="http://schemas.oracle.com/bpel/extension";bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/";corecom="http://xmlns.oracle.com/EnterpriseObjects/Core/Common/V2";wsa="http://schemas.xmlsoap.org/ws/2003/03/addressing;med="http://xmlns.oracle.com/sca/1.0/mediator";'/>
   <ProfileAssertion name="ABCSCompsiteProfileHarvester"
                description="Compliance Inspector recognizes ABCS composites based on composite.xml existance and attaches project profile to all the files which are children of composite.xml's parent folder."
                executor="XMLProfiler" fileType="composite.xml"
                category="ComplianceInspector-Bootstrap" priority="0"
                include="{ComponentName:.*ABCSImpl.*}">
       <Property name="ServiceNameId" xpath="/sca:composite/@name"  />
       <Property name="ComponentName" value="${ServiceNameId}"  />
       <Property name="ComponentVersion" xpath="/sca:composite/@revision"  />
	   <Property name="ResolvedCompName" class="oracle.soa.aia.governance.auditor.util.AIAService" func="resolvedProcessStr" args="${ComponentName}" expressionLanguage="Java"  visible="false" />	    
       <Property name="ServiceImplFileName" xpath="/sca:composite/sca:component[contains(@name,'ABCSImpl')]/sca:implementation.bpel/@src"  />
       <Property name="ServiceInterFileName" xpath="/sca:composite/sca:service[contains(@ui:wsdlLocation,'ABCSImpl')]/@ui:wsdlLocation"  />
       <Property name="ServiceInterFilePath" class="oracle.soa.aia.governance.auditor.input.artifacts.FileSystemManager" func="getFullPath" args="${ServiceInterFileName}" expressionLanguage="Java"   />
       <Property name="ServiceImplFilePath" value="${pwd}/${ServiceImplFileName}"  />
	   <Property name="targetNamespace" xpath="//sca:import[contains(@location,'${ResolvedCompName}') and not(contains(@location,'Extension')) and not(contains(@location,'Abstract'))]/@namespace" visible="false" /> 
       <Property name="hostName" xpath="substring-before(substring-after('${targetNamespace}','http://'),'/')"  />
       <Property name="ServiceType" xpath="substring-before(substring-after('${targetNamespace}','${hostName}/'),'/')"  />
       <Property name="Application" xpath="substring-before(substring-after('${targetNamespace}','${ServiceType}/'),'/')"  />
       <Property name="IndustryName" xpath="substring-before(substring-after('${targetNamespace}','Industry/'),'/')"  />
       <Property name="IndustryType" xpath="substring-before(substring-after('${targetNamespace}','${Application}/'),'/${IndustryName}')"  />
       <Property name="ServiceOperation" xpath="translate(substring-before(substring-after('${targetNamespace}','${IndustryType}/${IndustryName}'),'${Application}'),'/','')"  />
       <Property name="ComponentType" xpath="substring-before(substring-after('${targetNamespace}','/${ServiceOperation}${Application}${IndustryName}'),'/')"  />
       <Property name="WsdlServiceName"
                 value="${ServiceOperation}${Application}${IndustryName}${ComponentType}"  />
       <Property name="Version" xpath="substring-after('${targetNamespace}','${WsdlServiceName}/')"  />
       <Property name="MEP" class="oracle.soa.aia.governance.auditor.input.artifacts.reader.BPELFileReader" func="getMEP" args="${ServiceImplFilePath}"
                   expressionLanguage="Java"   />
	   <Property name="LifeTime" class="oracle.soa.aia.governance.auditor.input.artifacts.reader.BPELFileReader" func="getLifeTime" args="${ServiceImplFilePath}"
                   expressionLanguage="Java"   />
	   <Property name="assignTo.1" value=".:*.*" visible="false" />  
	   <Property name="assignTo.2" value="${ServiceInterFilePath}" visible="false" />
	  </ProfileAssertion>
	   
	<ProfileAssertion name="EBFCompsiteProfileHarvester"
                 description="Compliance Inspector recognizes BPEL composites based on composite.xml existance and attaches project profile to all the files which are children of composite.xml's parent folder."
                 executor="XMLProfiler" fileType="composite.xml"
                 category="ComplianceInspector-Bootstrap" priority="0"
                 include="{ComponentName:.*EBF.*}">
        <Property name="ServiceNameId" xpath="/sca:composite/@name"  />
        <Property name="ComponentName" value="${ServiceNameId}"  />
       <Property name="ComponentVersion" xpath="/sca:composite/@revision"  />
	   <Property name="ResolvedCompName" class="oracle.soa.aia.governance.auditor.util.AIAService" func="resolvedProcessStr" args="${ComponentName}" expressionLanguage="Java" visible="false"  />	    
        <Property name="ServiceImplFileName" xpath="/sca:composite/sca:component[contains(@name,'EBF')]/sca:implementation.bpel/@src"  />
        <Property name="ServiceInterFileName" xpath="/sca:composite/sca:service[contains(@ui:wsdlLocation,'EBF')]/@ui:wsdlLocation"  />
        <Property name="ServiceInterFilePath" class="oracle.soa.aia.governance.auditor.input.artifacts.FileSystemManager" func="getFullPath" args="${ServiceInterFileName}" expressionLanguage="Java"   />
		<Property name="ServiceImplFilePath" value="${pwd}/${ServiceImplFileName}"  />
	   <Property name="targetNamespace" xpath="//sca:import[contains(@location,'${ResolvedCompName}') and not(contains(@location,'Extension')) and not(contains(@location,'Abstract'))]/@namespace" visible="false" /> 
        <Property name="hostName" xpath="substring-before(substring-after('${targetNamespace}','http://'),'/')"  />
        <Property name="ServiceType" xpath="substring-before(substring-after('${targetNamespace}','${hostName}/'),'/')"  />
        <Property name="IndustryName" xpath="substring-before(substring-after('${targetNamespace}','Industry/'),'/')"  />
        <Property name="IndustryType" xpath="substring-before(substring-after('${targetNamespace}','${ServiceType}/'),'/${IndustryName}')"  />
        <Property name="FlowName" xpath="translate(substring-before(substring-after('${targetNamespace}','${IndustryType}/${IndustryName}'),'/'),'/','')"  />
        <Property name="Version" xpath="substring-after('${targetNamespace}','${FlowName}/')"  />
        <Property name="MEP" class="oracle.soa.aia.governance.auditor.input.artifacts.reader.BPELFileReader" func="getMEP" args="${ServiceImplFilePath}"
                   expressionLanguage="Java"   />
        <Property name="assignTo.1" value=".:*.*" visible="false" />  
		<Property name="assignTo.2" value="${ServiceInterFilePath}" visible="false" />
    </ProfileAssertion>
    
    <ProfileAssertion name="EBSMediaterCompsiteProfileHarvester"
                 description="Compliance Inspector recognizes Mediator projects based on composite.xml existance and attaches project profile to all the files which are children of composite.xml's parent folder."
                 executor="XMLProfiler" fileType="composite.xml"
                 category="ComplianceInspector-Bootstrap" priority="0"
                 include="{ComponentName:.*EBS.*}">
        <Property name="ServiceNameId" xpath="/sca:composite/@name"  />
        <Property name="ComponentName" value="${ServiceNameId}"  />
       <Property name="ComponentVersion" xpath="/sca:composite/@revision"  />
	   <Property name="ServiceImplFile" xpath="/sca:composite/sca:component[contains(@name,'EBS')]/sca:implementation.mediator/@src"  />
        <Property name="ServiceType" value="EBS"  />
        <Property name="ServiceTypeResp" xpath="substt(())"  />
        <Property name="assignTo.1" value=".:*.*" visible="false" />  
    </ProfileAssertion>
    <ProfileAssertion name="TransportAdapterCompsiteProfileHarvester"
                 description="Compliance Inspector recognizes Adapter projects based on JMS, DB in its name existance and attaches project profile to all the files which are children of composites.xml's parent folder."
                 executor="XMLProfiler" fileType="composite.xml"
                 category="ComplianceInspector-Bootstrap" priority="0"
                 include="{ComponentName:(.*Consumer.*|.*Producer.*|.*Adapter.*)}">
        <Property name="ServiceNameId" xpath="/sca:composite/@name"  visible="false"/>
        <Property name="ComponentName" value="${ServiceNameId}"  />
       <Property name="ComponentVersion" xpath="/sca:composite/@revision"  />
	   <Property name="ServiceBindFile" xpath="/sca:composite/sca:service/sca:binding.jca/@config | /sca:composite/sca:reference/sca:binding.jca/@config"  />
        <Property name="ServiceBindFilePath" value="${pwd}/${ServiceBindFile}" visible="false"/>
        <Property name="AdapterSystem" file="${ServiceBindFilePath}" xpath="/jcameta:adapter-config/@adapter"  />
        <Property name="AdapterOperation" file="${ServiceBindFilePath}" xpath="/jcameta:adapter-config/jcameta:endpoint-interaction/@operation | /jcameta:adapter-config/jcameta:endpoint-activation/@operation" />
        <Property name="Communication" file="${ServiceBindFilePath}" xpath="local-name(/jcameta:adapter-config/*[2])" />
        <Property name="AdapterTypeTemp" xpath="substring-before(substring-after(//sca:service/comment(),'svcdoc:ArtifactType'),'/svcdoc:ArtifactType')" visible="false"/>
        <Property name="AdapterType" xpath="substring('${AdapterTypeTemp}',2,string-length('${AdapterTypeTemp}')-2)" />  
        <Property name="ApplicationTemp" xpath="substring-before(substring-after(//sca:service/comment(),'svcdoc:ApplicationName'),'/svcdoc:ApplicationName')" visible="false"/>
        <Property name="Application" xpath="substring('${ApplicationTemp}',2,string-length('${ApplicationTemp}')-2)" />  
		<Property name="ServiceMplanFileName" xpath="//sca:component/child::*[contains(local-name(),'implementation')]/@src[contains(.,'.mplan')]" />
		<Property name="isResequenser" file="${pwd}/${ServiceMplanFileName}" xpath="contains(local-name(/med:Mediator/child::*[contains(local-name(),'resequencer')]),'resequencer')" />
		<Property name="assignTo.1" value=".:*.*" visible="false" />  
    </ProfileAssertion>

  <ProfileAssertion name="OthersCompositeProfileHarvester"
			   description="Compliance Inspector recognizes BPEL composites based on composite.xml existance and attaches project profile to all the files which are children of composite.xml's parent folder." 
			   executor="XMLProfiler" fileType="composite.xml" category="ComplianceInspector-Bootstrap" priority="0"
			   exclude="ComponentName:(.*Consumer.*|.*Producer.*|.*Adapter.*),ComponentName:.*ABCSImpl.*,ComponentName:.*EBF.*,ComponentName:.*EBS.*" include="{ComponentName:.*}">
        <Property name="ServiceNameId" xpath="/sca:composite/@name"  />
        <Property name="ComponentName" value="${ServiceNameId}"  />
       <Property name="ComponentVersion" xpath="/sca:composite/@revision"  />
	   <Property name="ServiceImplFile" xpath="/sca:composite/sca:component[contains(@name,'EBS')]/sca:implementation.mediator/@src"  />
        <Property name="assignTo.1" value=".:*.*" visible="false" />  
  </ProfileAssertion>
<!--	
-->
 </ProfileAssertionSet>
</ProfileAssertionSets>